events { worker_connections 1024; }

http {

    # Logs to stdout
    access_log /dev/stdout;

    # Defining upstream haskell-bazaar
    upstream api {
       server web:8001;
    }

    server {
        listen      80;
        listen [::]:80;
        server_name haskellbazaar.com www.haskellbazaar.com;

        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }

        # for certbot challenges (renewal process)
        location ~ /.well-known/acme-challenge {
            allow all;
            root /data/letsencrypt;
        }
    }

   # # Redirect www to no www
   # server {
   #     server_name www.haskellbazaar.com;
   #     return 301 $scheme://haskellbazaar.com$request_uri;
   # }

   # # Redirect http requests to https
   # server {
   #     listen         80;
   #     server_name    haskellbazaar.com;
   #     return         301 https://$server_name$request_uri;
   # }

    server {
       listen 443 ssl;
       server_name haskellbazaar.com;

       ssl_certificate /etc/letsencrypt/live/haskellbazaar.com/fullchain.pem;
       ssl_certificate_key /etc/letsencrypt/live/haskellbazaar.com/privkey.pem;


       location /api/v0/ {
          # Beware of the trailing slash in proxy_pass
          proxy_pass http://api/api/v0/;
          proxy_set_header Host $host;
       }

       location /health {
          proxy_pass http://api/health/;
          proxy_set_header Host $host;
       }

       # Serving assets from s3
       location /s3/ {
          proxy_pass https://haskell-bazaar.s3.amazonaws.com/;
       }

       # Rewrite root to index.html
       location = / {
          proxy_pass https://haskell-bazaar.s3.amazonaws.com/index.html;
       }

       # Serving assets from s3
       location / {
          proxy_pass https://haskell-bazaar.s3.amazonaws.com/;
       }
    }
}
